-- 1. How many actors are there with the last name ‘Wahlberg’?
SELECT *
FROM actor;

SELECT COUNT(last_name)
FROM actor
WHERE last_name LIKE 'Wahlberg';

-- Answer: count = 2

-- 2. How many payments were made between $3.99 and $5.99?
SELECT *
FROM payment;

SELECT COUNT(amount)
FROM payment
WHERE amount BETWEEN 3.99 AND 5.99;

-- Answer: count = 5607

-- 3. What film does the store have the most of? (search in inventory)
SELECT *
FROM inventory;

SELECT film_id, SUM(inventory_id)
FROM inventory
GROUP BY film_id
ORDER BY SUM(inventory_id) DESC;

-- Answer: film_id = 1000 and inventory = 36620

-- 4. How many customers have the last name ‘William’?
SELECT *
FROM customer;

SELECT COUNT(last_name)
FROM customer
WHERE last_name LIKE 'William';

-- Answer: count = 0

SELECT COUNT(last_name)
FROM customer
WHERE last_name LIKE 'Williams';

--Answer: count = 1 (since there werent any for 'william')

-- 5. What store employee (get the id) sold the most rentals?
SELECT * 
FROM rental;

SELECT staff_id,COUNT(staff_id)
FROM rental
GROUP BY staff_id
ORDER BY COUNT(staff_id) DESC;

-- Answer: staff_id = 1 and rental count = 8040

-- 6. How many different district names are there?
SELECT * 
FROM address;

SELECT COUNT(DISTINCT district)
FROM address;

--Answer: 378

-- 7. What film has the most actors in it? (use film_actor table and get film_id)
SELECT *
FROM film_actor;

SELECT film_id,COUNT(actor_id)
FROM film_actor
GROUP BY film_id
ORDER BY COUNT(actor_id) DESC;

-- Answer: film_id = 508

-- 8. From store_id 1, how many customers have a last name ending with ‘es’? (use customer table)
SELECT *
FROM customer;

SELECT store_id,COUNT(last_name)
FROM customer
WHERE last_name LIKE '%es'
GROUP BY store_id
ORDER BY COUNT(last_name) DESC;

-- Answer: 13

-- 9. How many payment amounts (4.99, 5.99, etc.) had a number of rentals above 250 for customers
-- with ids between 380 and 430? (use group by and having > 250)
SELECT *
FROM payment

SELECT amount,COUNT(amount),COUNT(rental_id)
FROM payment
WHERE customer_id BETWEEN 380 AND 430
GROUP BY amount
HAVING COUNT(rental_id) > 250
ORDER BY amount DESC;

-- Answer: 3 payment amounts

-- 10. Within the film table, how many rating categories are there? And what rating has the most
-- movies total?
SELECT * 
FROM film;

SELECT COUNT(DISTINCT rating), COUNT(rating), rating
FROM film
GROUP BY rating
ORDER BY COUNT(rating) DESC;

-- Answer: categories = 5 and PG-13 has most movies